using System.Numerics;
using Content.Shared._CorvaxNext.ModularComputers.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._CorvaxNext.ModularComputers.UI;

[GenerateTypedNameReferences]
public sealed partial class GPURender : Control
{
    public PciGpuComponent? GpuComponent;

    public GPURender()
    {
        RobustXamlLoader.Load(this);
    }

    protected override void Draw(DrawingHandleScreen handle)
    {
        base.Draw(handle);

        if (GpuComponent != null)
        {
            foreach (var command in GpuComponent.Commands)
            {
                switch (command)
                {
                    case DrawLine drawLine:
                        handle.DrawLine(new Vector2(drawLine.X1, drawLine.Y1), new Vector2(drawLine.X2, drawLine.Y2), drawLine.Color);
                        break;
                }
            }
        }
    }
}

